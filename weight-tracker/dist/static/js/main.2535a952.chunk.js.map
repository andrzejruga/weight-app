{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/records/SingleRecord.js","components/records/LatestRecords.js","components/records/NewRecord.js","store/actions/recordActions.js","components/dashboard/Dashboard.js","components/records/RecordDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/records/History.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/recordReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","SingleRecord","_ref","record","weightOne","moment","date","format","weightTwo","LatestRecords","records","map","id","key","records_SingleRecord","NewRecord","handleChange","e","_this","setState","Object","defineProperty","target","parseFloat","value","toFixed","handleSubmit","preventDefault","addRecord","onSubmit","this","htmlFor","step","placeholder","min","max","onChange","defaultValue","required","Component","firestore","getFirestore","authorId","collection","add","objectSpread","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","catch","err","Dashboard","_this$props","records_NewRecord","records_LatestRecords","Redirect","compose","ordered","firestoreConnect","orderBy","limit","RecordDetails","handleDelete","match","params","deleteRecord","toDate","calendar","ownProps","data","doc","delete","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","_ref3","createUserWithEmailAndPassword","resp","user","set","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","History","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","recordReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2535a952.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"nav__list\">\n            <li className=\"nav__item\"><NavLink className=\"nav__link\" to='/history'>History</NavLink></li>\n            <li className=\"nav__item\"><a href='/signin' onClick={props.signOut} className=\"nav__link\">Log Out</a></li>\n            <li className=\"nav__item\"><NavLink className=\"nav__link nav__link--initials\" to='/'>{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        });\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"nav__list\">\n            <li className=\"nav__item\"><NavLink className=\"nav__link\" to='/signup'>Signup</NavLink></li>\n            <li className=\"nav__item\"><NavLink className=\"nav__link\" to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    // console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    return (\n        <nav className=\"nav\">\n            <div className=\"nav__container container\">\n                <Link to='/' className=\"nav__logo\">Weight Tracker</Link>\n                <div className=\"nav__main\">\n                    { links }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst SingleRecord = ({record}) => {\n    return (\n        <div className=\"single__box\">\n            <div className=\"single__one\">{record.weightOne}</div>\n            <div className=\"single__date\">{moment(record.date).format('DD MMM YYYY')}</div>\n            <div className=\"single__two\">{record.weightTwo}</div>\n        </div>\n    )\n}\n\nexport default SingleRecord;","import React from 'react';\nimport SingleRecord from './SingleRecord';\nimport { Link } from 'react-router-dom';\n\nconst LatestRecords = ({records}) => {\n    return (\n        <div className=\"latest\">\n            <h4 className=\"latest__title\">Last 7 days results</h4>\n            <div className=\"single__box\">\n                <div className=\"single__header single__header--one\">Monka</div>\n                <div className=\"single__header single__header--date\">Date</div>\n                <div className=\"single__header single__header--two\">Andy</div>\n            </div>\n            { records && records.map(record => {\n                return (\n                    <Link to={'/record/' + record.id} key={record.id} className=\"single\">\n                        <SingleRecord record={record} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default LatestRecords;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addRecord } from '../../store/actions/recordActions';\nimport moment from 'moment';\n\nclass NewRecord extends Component {\n    state = {\n        weightOne: '',\n        weightTwo: '',\n        date: moment().format('YYYY-MM-D')\n    }\n    handleChange = (e) => {\n        this.setState({\n            // [e.target.id]: e.target.value\n            [e.target.id]: (e.target.id === 'weightOne' || e.target.id === 'weightTwo') ?\n                parseFloat(e.target.value).toFixed(1) :\n                e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addRecord(this.state);\n    }\n    render() {\n        // let today = moment().format('YYYY-MM-D');\n        // console.log(today);\n        return (\n            <div className=\"form\">\n                <form onSubmit={this.handleSubmit} className=\"form__main\">\n                    <h4 className=\"form__title\">Enter your weight</h4>\n                    <div className=\"form__input-field\">\n                        <label htmlFor=\"weightOne\" className=\"form__input-label\">Monka</label>\n                        <input type=\"number\" step=\"0.1\" placeholder=\"00.0\" min=\"2\" max=\"200\" id=\"weightOne\" onChange={this.handleChange} className=\"form__input form__input--number\"/>\n                        <span>kg</span>\n                    </div>\n                    <div className=\"form__input-field\">\n                        <label htmlFor=\"date\" className=\"form__input-label\">Date</label>\n                        <input type=\"date\" id=\"date\" defaultValue={moment().format('YYYY-MM-D')} onChange={this.handleChange} className=\"form__input form__input--date\" required/>\n                    </div>\n                    <div className=\"form__input-field\">\n                        <label htmlFor=\"weightTwo\" className=\"form__input-label\">Andy</label>\n                        <input type=\"number\" step=\"0.1\" placeholder=\"00.0\" min=\"2\" max=\"200\" id=\"weightTwo\" onChange={this.handleChange} className=\"form__input form__input--number\"/>\n                        <span>kg</span>\n                    </div>\n                    <div className=\"form__input-field\">\n                        <button className=\"btn btn--save\">Save</button>\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addRecord: (record) => dispatch(addRecord(record))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(NewRecord);","export const addRecord = (record) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database and then dispatch\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('records').add({\n            ...record, // properties from state from NewRecord\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'ADD_RECORD', record }); // record: record\n        }).catch((err) => {\n            dispatch({ type: 'ADD_RECORD_ERROR', err });\n        });\n    }\n}\n\nexport const deleteRecord = (record) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        firestore.collection('records').doc(record.id).delete().then(() => {\n            dispatch({ type: 'DELETE_RECORD'});\n        }).catch((err) => {\n            dispatch({ type: 'DELETE_RECORD_ERROR', err });\n        });\n    }\n}","import React, { Component } from 'react';\nimport LatestRecords from '../records/LatestRecords';\nimport NewRecord from '../records/NewRecord';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render() {\n        // console.log(this.props);\n        const { records, auth } = this.props; // don't need to desctructure, also can use below this.props.records\n        if (!auth.uid) return <Redirect to='/signin' />\n    \n        return (\n            <div className=\"dashboard\">\n                <div className=\"dashboard__container container container--main\">\n                    <div className=\"dashboard__new\">\n                        <NewRecord />\n                    </div>\n                    <div className=\"dashboard__latest\">\n                        <LatestRecords records={records} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        records: state.firestore.ordered.records,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'records', orderBy: ['date', 'desc'], limit: 7 } // this component will update our state everytime there's a change in our db\n    ])\n)(Dashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport 'moment/locale/en-gb';\nimport { deleteRecord } from '../../store/actions/recordActions';\n\nclass RecordDetails extends Component {\n    handleDelete = (e) => {\n        e.preventDefault();\n        const id = this.props.match.params;\n        this.props.deleteRecord(id);\n    }\n    render() {\n        const { record, auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        if (!record) return <Redirect to='/' />\n\n        if (record) {\n            return (\n                <div className=\"details\">\n                    <div className=\"details__container container container--main\">\n                        <div className=\"details__box\">\n                            <h4 className=\"details__title\">Single record details</h4>\n                            <div className=\"details__data\">\n                                <div className=\"details__name details__name--one\">Monka</div>\n                                <div className=\"details__name details__name--two\">Andy</div>\n                                <div className=\"details__record details__record--one\">{record.weightOne} kg</div>\n                                <div className=\"details__date\">{moment(record.date).format('dddd, D MMM YYYY')}</div>\n                                <div className=\"details__record details__record--two\">{record.weightTwo} kg</div>\n                            </div>\n                            <div className=\"details__misc\">\n                                <div className=\"details__added-by\">Added by {record.authorFirstName} {record.authorLastName}</div>\n                                <div className=\"details__added-date\">Date added: {moment(record.createdAt.toDate()).calendar()}</div>\n                            </div>\n                            <div className=\"details__actions\">\n                                <div className=\"details__edit\">\n                                    <button className=\"btn btn--edit\">Edit</button>\n                                </div>\n                                <div className=\"details__delete\">\n                                    <button onClick={this.handleDelete} className=\"btn btn--delete\">Delete</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <p>Loading record...</p>\n                </div>\n            )\n        }\n\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const records = state.firestore.data.records;\n    const record = records ? records[id] : null;\n    return {\n        record: record,\n        auth: state.firebase.auth,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteRecord: (id) => dispatch(deleteRecord(id))\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        { collection: 'records' }\n    ])\n)(RecordDetails);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container container--main\">\n                <form onSubmit={this.handleSubmit} className=\"form\">\n                    <h4 className=\"form__title\">Sign In</h4>\n                    <div className=\"form__input-field form__input-field--sign-in-up\">\n                        <label htmlFor=\"email\" className=\"form__input-label\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} className=\"form__input\"/>\n                    </div>\n                    <div className=\"form__input-field form__input-field--sign-in-up\">\n                        <label htmlFor=\"password\" className=\"form__input-label\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} className=\"form__input\"/>\n                    </div>\n                    <div className=\"form__input-field form__input-field--sign-in-up\">\n                        <button className=\"btn btn--login\">Login</button>\n                    </div>\n                    <div className=\"form__error-field\">\n                        { authError ? <p>{authError}</p> : null }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container container--main\">\n                <form onSubmit={this.handleSubmit} className=\"form\">\n                    <h4 className=\"form__title\">Sign Up</h4>\n                    <div className=\"form__input-field form__input-field--sign-in-up\">\n                        <label htmlFor=\"email\" className=\"form__input-label\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} className=\"form__input\"/>\n                    </div>\n                    <div className=\"form__input-field form__input-field--sign-in-up\">\n                        <label htmlFor=\"password\" className=\"form__input-label\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} className=\"form__input\"/>\n                    </div>\n                    <div className=\"form__input-field form__input-field--sign-in-up\">\n                        <label htmlFor=\"firstName\" className=\"form__input-label\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} className=\"form__input\"/>\n                    </div>\n                    <div className=\"form__input-field form__input-field--sign-in-up\">\n                        <label htmlFor=\"lastName\" className=\"form__input-label\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} className=\"form__input\"/>\n                    </div>\n                    <div className=\"form__input-field form__input-field--sign-in-up\">\n                        <button className=\"btn btn--signup\">Sign up</button>\n                    </div>\n                    <div className=\"form__error-field\">\n                        { authError ? <p>{ authError }</p> : null }\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\nimport SingleRecord from './SingleRecord';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nconst History = (props) => {\n    const { records, auth } = props;\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    return (\n        <div className=\"history\">\n            <div className=\"history__container container container--main\">\n                <h4 className=\"history__title\">Last 30 days results</h4>\n                <div className=\"single__box\">\n                    <div className=\"single__header single__header--one\">Monka</div>\n                    <div className=\"single__header single__header--date\">Date</div>\n                    <div className=\"single__header single__header--two\">Andy</div>\n                </div>\n                { records && records.map(record => {\n                    return (\n                        <Link to={'/record/' + record.id} key={record.id} className=\"single\">\n                            <SingleRecord record={record} />\n                        </Link>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        records: state.firestore.ordered.records,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'records', orderBy: ['date', 'desc'] } // this component will update our state everytime there's a change in our db\n    ])\n)(History);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport RecordDetails from './components/records/RecordDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport History from './components/records/History';\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Navbar />\n                    <Switch>\n                        <Route exact path='/' component={Dashboard} />\n                        <Route path='/record/:id' component={RecordDetails} />\n                        <Route path='/signin' component={SignIn} />\n                        <Route path='/signup' component={SignUp} />\n                        <Route path='/history' component={History} />\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {}\n\nconst recordReducer = (state = initState, action) => {\n    switch (action.type) { // I could use as well if statement instead of switch\n        case 'ADD_RECORD':\n            console.log('added record', action.record);\n            return state;\n        case 'ADD_RECORD_ERROR':\n            console.log('add record error', action.err);\n            return state;\n        case 'DELETE_RECORD':\n            console.log('deleted record');\n            return state;\n        case 'DELETE_RECORD_ERROR':\n            console.log('delete record error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default recordReducer;","import authReducer from './authReducer';\nimport recordReducer from './recordReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // premade reducer made for syncing firestore data with our state in the background\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    record: recordReducer,\n    firestore: firestoreReducer, // responsible for syncing our data\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyBZsjOrn9lCif1BOrExPEMVQvxpawZxljQ\",\n    authDomain: \"andy-weight-tracker.firebaseapp.com\",\n    databaseURL: \"https://andy-weight-tracker.firebaseio.com\",\n    projectId: \"andy-weight-tracker\",\n    storageBucket: \"andy-weight-tracker.appspot.com\",\n    messagingSenderId: \"671176989899\"\n};\n\nfirebase.initializeApp(config);\n// firebase.firestore().settings({ timestampsInSnapshots: true }); // no need to use it anymore\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\n// reactReduxFirebase is an enhancer\n\n// useFirestoreForProfile and userProfile are used by firebase reducer to sync firestore\n// with the profile object in the state\n\n// thanks to AuthIsReady the app doesn't show sign in links in navbar for a few seconds\n// untill it realizes we are logged in and it starts showing sign out links\n// now we wait with rendering the DOM until firebase checks auth status\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n"],"sourceRoot":""}